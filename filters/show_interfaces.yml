vars:
  interface:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    protocol: "{{ item.protocol }}"
    description: "{{ item.desc }}"
    input_rate_interval_units: "{{ item.input_rate_interval_units }}"
    input_rate_interval_value: "{{ item.input_rate_interval }}"
    input_rate_units: "{{ item.input_rate_units }}"
    input_rate_value: "{{ item.input_rate }}"
    output_rate_interval_units: "{{ item.output_rate_interval_units }}"
    output_rate_interval_value: "{{ item.output_rate_interval }}"
    output_rate_units: "{{ item.output_rate_units }}"
    output_rate_value: "{{ item.output_rate }}"
    mtu_units: "{{ item.mtu_units }}"
    mtu_value: "{{ item.mtu }}"
    bandwdth_units: "{{ item.bandwidth_units }}"
    bandwdth_value: "{{ item.bandwidth }}"
    delay_units: "{{ item.delay_units }}"
    delay_value: "{{ item.delay }}"
    internet_address: "{{ item.internet_address }}"
    hw_type: "{{ item.hw_type}}"
    mac_address: "{{ item.mac_address}}"
    duplex: "{{ item.duplex }}"
    speed: "{{ item.speed }}"
    media_type: "{{ item.media_type }}"
    link_type: "{{ item.link_type }}"
    input_errors: "{{ item.input_errors}}"
    crc_errors: "{{ item.crc_errors}}"
    frame_errors: "{{ item.frame_errors}}"
    overrun_errors: "{{ item.overrun_errors}}"
    ignored_errors: "{{ item.ignored_errors}}"
    output_errors: "{{ item.output_errors}}"
    collisions: "{{ item.collisions}}"
    interface_resets: "{{ item.interface_resets}}"
    reliability: "{{ item.reliability }}"
    tx_load: "{{ item.tx_load }}"
    rx_load: "{{ item.rx_load }}"
keys:
  interfaces:
    value: "{{ interface }}"
    items: "(?P<name>(Vlan|FastEthernet|GigabitEthernet|Port)-?[A-Za-z]*\\d+/?\\d*/?\\d*) is (?P<state>[^,]+), line protocol is (?P<protocol>[^\n]+)\n
    \\s*Hardware is (?P<hw_type>[^,]+), address is (?P<mac_address>[0-9a-f]{4}\\.[0-9a-f]{4}\\.[0-9a-f]{4}) \\(bia .{14}\\)\\s*\n
    (\\s*?Description:\\s*(?P<desc>.+)\n)?(\\s*?Internet address is (?P<internet_address>\\d\\d?\\d?\\.\\d\\d?\\d?\\.\\d\\d?\\d?\\.\\d\\d?\\d?/\\d\\d?)\\s*\n)?
    [\\w\\W]*?MTU (?P<mtu>\\d+) (?P<mtu_units>\\w+), BW (?P<bandwidth>\\d+) (?P<bandwidth_units>[^,]+), DLY (?P<delay>\\d+) (?P<delay_units>\\w+),\\s*\n
    \\s*?reliability (?P<reliability>\\d\\d?\\d?/\\d\\d?\\d?), txload (?P<tx_load>\\d\\d?\\d?/\\d\\d?\\d?), rxload (?P<rx_load>\\d\\d?\\d?/\\d\\d?\\d?)\\s*\n
    \\s*?Encapsulation[^\n]+\n
    \\s*?Keepalive[^\n]+\n
    (\\s*?(?P<duplex>[^,]+), (?P<speed>[^,]+)(, link type is (?P<link_type>[^,]+))?, media type is (?P<media_type>[^\n]+)\n)?
    [\\w\\W]*?(?P<input_rate_interval>\\d+) (?P<input_rate_interval_units>\\w+) input rate (?P<input_rate>\\d+) (?P<input_rate_units>\\w+/\\w+).+?\n
    [\\w\\W]*?(?P<output_rate_interval>\\d+) (?P<output_rate_interval_units>\\w+) output rate (?P<output_rate>\\d+) (?P<output_rate_units>\\w+/\\w+).*?\n
    [\\w\\W]*?(?P<input_errors>\\d+) input errors, (?P<crc_errors>\\d+) CRC, (?P<frame_errors>\\d+) frame, (?P<overrun_errors>\\d+) overrun, (?P<ignored_errors>\\d+) ignored\\s*\n
    [\\w\\W]*?(?P<output_errors>\\d+) output errors(, (?P<collisions>\\d+) collisions)?, (?P<interface_resets>\\d+) interface resets\\s*\n"